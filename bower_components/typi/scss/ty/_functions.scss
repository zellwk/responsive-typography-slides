// _ty-font-size
// =============
// Calls _ty-calc-font-size or _ty-base-size
@function _ty-font-size(
  $font-size,
  $breakpoint,
  $typi,
  $rem,
  $base
) {
  @if $base == true {
    @return _ty-base-size($font-size);
  } @else {
    @return _ty-calc-font-size($font-size, $breakpoint, $typi, $rem);
  }
}

// _ty-calc-font-size
// =======
// returns correct rem value depending on
// breakpoint
@function _ty-calc-font-size(
  $font-size,
  $breakpoint,
  $typi,
  $rem
) {
  // Convert px and em into rem
  @if $rem {
    @if unit($font-size) == 'em' {
      @return _ty-strip-unit($font-size) * 1rem;
    }

    @else if unit($font-size) == 'px' {
      $basemap: map-get($typi, $breakpoint);
      $basefont: if(type-of($basemap) == 'list', nth($basemap, 1), $basemap);

      @return $font-size / $basefont * 1rem;
    }

    @else {
      @return $font-size;
    }
  }

  // Converts rem and px into em
  @else {
    @if unit($font-size) == 'rem' {
      @return _ty-strip-unit($font-size) * 1em;
    }

    @else if unit($font-size) == 'px' {
      $basemap: map-get($typi, $breakpoint);
      $basefont: if(type-of($basemap) == 'list', nth($basemap, 1), $basemap);

      @return _ty-em($font-size, $basefont);
    }

    @else {
      @return $font-size;
    }
  }
}

// _ty-base-size
// =============
// Converts Typi sizes into percentages
@function _ty-base-size(
  $font-size
) {
  @if unit($font-size) == 'px' {
    @return $font-size / 16px * 100%;
  }

  @else {
    @error 'Typi font sizes must be written in pixels';
  }
}


// _ty-strip-unit
// ==============
@function _ty-strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// _typi-em
// ========
@function _ty-em($font-size, $ref-size: false) {
  @if ($ref-size) {
    @return $font-size / $ref-size * 1em;
  }
}

// _typi-rem
// =========
@function _ty-rem($font-size) {
  @if unit($font-size) == 'px' {
    @return strip-unit($font-size) / 16 * 1rem;
  }
  @else if unit($font-size) == 'em' {
    @return strip-unit($font-size) * 1rem;
  }
}